# Fastfile for Taco Bell Distance App
default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Ensure we're on the main branch
    ensure_git_branch(
      branch: 'main'
    )

    # Increment build number
    increment_build_number(
      build_number: latest_testflight_build_number + 1
    )

    # Update build number in git
    commit_version_bump(
      message: "Build number bump [ci skip]",
      xcodeproj: "TacoBellApp.xcodeproj"
    )

    # Build the app
    build_app(
      scheme: "TacoBellApp",
      export_method: "app-store",
      include_bitcode: false,
      include_symbols: true,
      export_options: {
        provisioningProfiles: {
          "com.yourdomain.TacoBellApp" => "TacoBellApp Distribution Profile"
        }
      }
    )

    # Upload to TestFlight
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      apple_id: ENV["APPLE_APP_ID"],
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: false
    )

    # Push version bump commit
    push_to_git_remote
  end

  desc "Bump version number"
  lane :bump_version do |options|
    # Default to patch if no type specified
    bump_type = options[:type] || "patch"
    
    # Increment version number
    increment_version_number(
      bump_type: bump_type
    )

    # Commit the version bump
    commit_version_bump(
      message: "Version bump to #{get_version_number} [ci skip]",
      xcodeproj: "TacoBellApp.xcodeproj"
    )

    # Push to remote
    push_to_git_remote
  end

  # Error handling
  error do |lane, exception, options|
    # Post to Slack or email if configured
    # slack(message: exception.message) if ENV['SLACK_URL']
    
    # Output error details
    puts "Error in lane #{lane}: #{exception.message}"
  end
end
